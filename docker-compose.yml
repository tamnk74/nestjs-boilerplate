version: '3.5'
services:
  nest-app:
    build:
      context: .
      target: deps
    image: nest_app
    command: npm start
    environment:
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
    ports:
      - '3000:3000'
    depends_on:
      - postgres
    volumes:
      - .:/var/www
    networks:
      - node-network
  postgres:
    image: postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-nestdb}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
    volumes:
      - ${DOCKER_VOLUMN:-~/.docker/data}/postgres:/data/postgres
    ports:
      - 5432:5432
    networks:
      - node-network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - ${DOCKER_VOLUMN:-~/.docker/data}/pgadmin:/root/.pgadmin
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    networks:
      - node-network
    restart: unless-stopped

  redis:
    image: redis:alpine
    privileged: true
    ports:
      - 6379:6379
    networks:
      - node-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.1
    environment:
      - xpack.security.enabled=false
      - 'discovery.type=single-node'
    ports:
      - 9200:9200
    networks:
      - node-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.1
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - node-network
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601

volumes:
  dbdata:
  pgadmin:
  node_modules:

networks:
  node-network:
    driver: bridge
